[package]
name = "indexed_valued_enums"
version = "1.0.0"
edition = "2021"
authors = ["Jorge Rico Vivas <jorgericosoftware@gmail.com>"]
license-file = "../LICENSE.txt"
description = "Create enums resolving into values, and get their variants back through their values or their discriminant, inspired by Java."
repository = "https://github.com/JorgeRicoVivas/indexed_valued_enums"
keywords = ["valued", "enum"]
categories = ["no-std", "no-std::no-alloc", "rust-patterns"]
readme = "../README.md"

[lib]
crate-type = ["lib"]

[dependencies]
serde = { version = "1.0.197", optional = true }
indexed_valued_enums_derive = { version = "1.0.0", path = "../indexed_valued_enums_derive", optional = true }

[features]
# Allows the macros extra features 'Serialize' and 'Deserialize' with serde.
serde_enums = ["dep:serde"]
# Allows the use of the #[derive(Valued)] macro.
derive = ["dep:indexed_valued_enums_derive"]

[dev-dependencies]
indexed_valued_enums_derive = { version = "1.0.0", path = "../indexed_valued_enums_derive" }
serde = { version = "1.0.197" }
nanoserde = { version = "0.1.37" }
const-default = { version = "1.0.0" }